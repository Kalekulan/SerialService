#!/bin/sh
# /etc/init.d/serialService

### BEGIN INIT INFO
# Provides:          <NAME>
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       <DESCRIPTION>
### END INIT INFO

SCRIPT="/usr/local/sbin/server.py &"
RUNAS=root
NAME=serialService

PIDFILE=/var/run/$NAME.pid
LOGFILE=/var/log/$NAME.log

start() {
  if [ -f $PIDFILE ] && kill -0 $(cat $PIDFILE); then
    echo "Service '$NAME' already running" >&2
    return 1
  fi
  echo "Starting service '$NAME'…" >&2
  local CMD="$SCRIPT &> \"$LOGFILE\" & echo \$!"
  #local CMD="$SCRIPT"
  # su -c "$CMD" $RUNAS > "$PIDFILE"
  #su -c "$CMD" $RUNAS > "$PIDFILE"
  # $SCRIPT
  # su -c "$CMD" $RUNAS
  #/usr/local/sbin/server.py &
  #/usr/local/sbin/server.py &
  su -c "$CMD" $RUNAS
  echo "Service '$NAME' started" >&2
}

stop() {
  if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
    echo "Service '$NAME' not running" >&2
    return 1
  fi
  echo "Stopping service $NAME…" >&2
  kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
  echo "Service '$NAME' stopped" >&2
}

status() {
        printf "%-50s" "Checking '$NAME'..."
    if [ -f $PIDFILE ]; then
        PID=$(cat $PIDFILE)
            if [ -z "$(ps axf | grep ${PID} | grep -v grep)" ]; then
                printf "%s\n" "The process appears to be dead but pidfile still exists"
            else    
                echo "Running, the PID is $PID"
            fi
    else
        printf "%s\n" "Service '$NAME' not running"
    fi
}


case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart}"
esac
